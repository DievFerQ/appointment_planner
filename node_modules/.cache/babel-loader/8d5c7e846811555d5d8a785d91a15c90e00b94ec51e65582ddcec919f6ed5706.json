{"ast":null,"code":"var _jsxFileName = \"/Users/dievfer/Desktop/appointment-planner-starting-v18/src/App.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from \"react\";\n// import { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\n// import Root, { ROUTES } from \"./components/root/Root\";\n// import { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\n// import { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\n\n// function App() {\n//   /*\n//   Define state variables for \n//   contacts and appointments \n//   */\n//   const [contacts, setContacts] = useState([]);\n//   const [appointments, setAppointments] = useState([]);\n\n//   /*\n//   Implement functions to add data to\n//   contacts and appointments\n//   */\n//     const addContact = (name, phoneNumber, email) => {\n//     const newContact = {\n//       name: name, \n//       phoneNumber: phoneNumber,\n//       email: email,\n//     };\n//     setContacts((prevContacts) => [...prevContacts, newContact]);\n//   };\n//     const addAppoint = (name, phoneNumber, email) => {\n//       const newAppoint={\n//         name: name, \n//         phoneNumber: phoneNumber, \n//         email: email,\n//       };\n//       setAppointments((prevAppointments) => [...prevAppointments, newAppoint]);\n//     };\n\n//   const router = createBrowserRouter(createRoutesFromElements(\n//     <Route path=\"/\" element={ <Root/> }>\n//       <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\n//       <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\n//       <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\n//     </Route>\n//   ));\n\n//   return (\n//     <>\n//       <nav>\n//         <NavLink to={ROUTES.CONTACTS} activeClassName='active'>\n//           Contacts\n//         </NavLink>\n//         <NavLink to={ROUTES.APPOINTMENTS} activeClassName='active'>\n//           Appointments\n//         </NavLink>\n//       </nav>\n//       <main>\n//         <Switch>\n//           <Route exact path='/'>\n//             <Redirect to={ROUTES.CONTACTS} />\n//           </Route>\n//           <Route path={ROUTES.CONTACTS}>\n//             {/* Add props to ContactsPage */}\n//             <ContactsPage contacts={contacts} addContact={addContact} />\n//           </Route>\n//           <Route path={ROUTES.APPOINTMENTS}>\n//             {/* Add props to AppointmentsPage */}\n//             <AppointmentsPage\n//               contacts={contacts}\n//               appointments={appointments}\n//               addAppointment={addAppoint}\n//             />\n//           </Route>\n//         </Switch>\n//       </main>\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const ROUTES = {\n    CONTACTS: \"/contacts\",\n    APPOINTMENTS: \"/appointments\",\n    ABOUT: \"/\"\n  };\n  const addContact = (name, phoneNumber, email) => {\n    const newContact = {\n      name,\n      phoneNumber,\n      email\n    };\n    setContacts([...contacts, newContact]);\n  };\n  const addAppointment = (title, contact, date, time) => {\n    const newAppointment = {\n      title,\n      contact,\n      date,\n      time\n    };\n    setAppointments([...appointments, newAppointment]);\n  };\n  const removeContact = contactName => {\n    const newContacts = contacts.filter(contact => {\n      return contact.name !== contactName;\n    });\n    setContacts(newContacts);\n  };\n  const removeAppointment = appointmentTitle => {\n    const newAppointments = appointments.filter(appointment => {\n      return appointment.title !== appointmentTitle;\n    });\n    setAppointments(newAppointments);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        exact: true,\n        to: ROUTES.ABOUT,\n        activeClassName: \"active\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.CONTACTS,\n        activeClassName: \"active\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.APPOINTMENTS,\n        activeClassName: \"active\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.ABOUT,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(IntroPageComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.CONTACTS,\n        children: /*#__PURE__*/_jsxDEV(ContactsPage, {\n          contacts: contacts,\n          addContact: addContact,\n          removeContact: removeContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.APPOINTMENTS,\n        children: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n          appointments: appointments,\n          contacts: contacts,\n          addAppointment: addAppointment,\n          removeAppointment: removeAppointment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","NavLink","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","contacts","setContacts","appointments","setAppointments","ROUTES","CONTACTS","APPOINTMENTS","ABOUT","addContact","name","phoneNumber","email","newContact","addAppointment","title","contact","date","time","newAppointment","removeContact","contactName","newContacts","filter","removeAppointment","appointmentTitle","newAppointments","appointment","children","exact","to","activeClassName","fileName","_jsxFileName","lineNumber","columnNumber","path","IntroPageComponent","_c","$RefreshReg$"],"sources":["/Users/dievfer/Desktop/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["// import React, {useState} from \"react\";\r\n// import { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\n// import Root, { ROUTES } from \"./components/root/Root\";\r\n// import { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\n// import { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\n// function App() {\r\n//   /*\r\n//   Define state variables for \r\n//   contacts and appointments \r\n//   */\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   /*\r\n//   Implement functions to add data to\r\n//   contacts and appointments\r\n//   */\r\n//     const addContact = (name, phoneNumber, email) => {\r\n//     const newContact = {\r\n//       name: name, \r\n//       phoneNumber: phoneNumber,\r\n//       email: email,\r\n//     };\r\n//     setContacts((prevContacts) => [...prevContacts, newContact]);\r\n//   };\r\n//     const addAppoint = (name, phoneNumber, email) => {\r\n//       const newAppoint={\r\n//         name: name, \r\n//         phoneNumber: phoneNumber, \r\n//         email: email,\r\n//       };\r\n//       setAppointments((prevAppointments) => [...prevAppointments, newAppoint]);\r\n//     };\r\n\r\n\r\n//   const router = createBrowserRouter(createRoutesFromElements(\r\n//     <Route path=\"/\" element={ <Root/> }>\r\n//       <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n//       <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\r\n//       <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\r\n//     </Route>\r\n//   ));\r\n  \r\n//   return (\r\n//     <>\r\n//       <nav>\r\n//         <NavLink to={ROUTES.CONTACTS} activeClassName='active'>\r\n//           Contacts\r\n//         </NavLink>\r\n//         <NavLink to={ROUTES.APPOINTMENTS} activeClassName='active'>\r\n//           Appointments\r\n//         </NavLink>\r\n//       </nav>\r\n//       <main>\r\n//         <Switch>\r\n//           <Route exact path='/'>\r\n//             <Redirect to={ROUTES.CONTACTS} />\r\n//           </Route>\r\n//           <Route path={ROUTES.CONTACTS}>\r\n//             {/* Add props to ContactsPage */}\r\n//             <ContactsPage contacts={contacts} addContact={addContact} />\r\n//           </Route>\r\n//           <Route path={ROUTES.APPOINTMENTS}>\r\n//             {/* Add props to AppointmentsPage */}\r\n//             <AppointmentsPage\r\n//               contacts={contacts}\r\n//               appointments={appointments}\r\n//               addAppointment={addAppoint}\r\n//             />\r\n//           </Route>\r\n//         </Switch>\r\n//       </main>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n    ABOUT: \"/\",\r\n  };\r\n\r\n  const addContact = (name, phoneNumber, email) => {\r\n    const newContact = {\r\n      name,\r\n      phoneNumber,\r\n      email\r\n    };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    const newAppointment = {\r\n      title,\r\n      contact,\r\n      date,\r\n      time\r\n    };\r\n    setAppointments([...appointments, newAppointment]);\r\n  }\r\n\r\n  const removeContact = (contactName) => {\r\n    const newContacts = contacts.filter((contact) => {\r\n      return contact.name !== contactName;\r\n    });\r\n    setContacts(newContacts);\r\n  }\r\n\r\n  const removeAppointment = (appointmentTitle) => {\r\n    const newAppointments = appointments.filter((appointment) => {\r\n      return appointment.title !== appointmentTitle;\r\n    });\r\n    setAppointments(newAppointments);\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <nav>\r\n          <NavLink exact to={ROUTES.ABOUT} activeClassName=\"active\">\r\n            About\r\n          </NavLink>\r\n          <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n            Contacts\r\n          </NavLink>\r\n          <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n            Appointments\r\n          </NavLink>\r\n        </nav>\r\n        <main>\r\n            <Route path={ROUTES.ABOUT} exact>\r\n              <IntroPageComponent />\r\n            </Route>\r\n            <Route path={ROUTES.CONTACTS}>\r\n              <ContactsPage contacts={contacts} addContact={addContact} removeContact={removeContact} />\r\n            </Route>\r\n            <Route path={ROUTES.APPOINTMENTS}>\r\n              <AppointmentsPage appointments={appointments} contacts={contacts} addAppointment={addAppointment} removeAppointment={removeAppointment} />\r\n            </Route>\r\n        </main>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}