{"ast":null,"code":"var _jsxFileName = \"/Users/dievfer/Desktop/appointment-planner-starting-v18/src/App.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from \"react\";\n// import { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\n// import Root, { ROUTES } from \"./components/root/Root\";\n// import { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\n// import { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\n\n// function App() {\n//   /*\n//   Define state variables for \n//   contacts and appointments \n//   */\n//   const [contacts, setContacts] = useState([]);\n//   const [appointments, setAppointments] = useState([]);\n\n//   /*\n//   Implement functions to add data to\n//   contacts and appointments\n//   */\n//     const addContact = (name, phoneNumber, email) => {\n//     const newContact = {\n//       name: name, \n//       phoneNumber: phoneNumber,\n//       email: email,\n//     };\n//     setContacts((prevContacts) => [...prevContacts, newContact]);\n//   };\n//     const addAppoint = (name, phoneNumber, email) => {\n//       const newAppoint={\n//         name: name, \n//         phoneNumber: phoneNumber, \n//         email: email,\n//       };\n//       setAppointments((prevAppointments) => [...prevAppointments, newAppoint]);\n//     };\n\n//   const router = createBrowserRouter(createRoutesFromElements(\n//     <Route path=\"/\" element={ <Root/> }>\n//       <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\n//       <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\n//       <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\n//     </Route>\n//   ));\n\n//   return (\n//     <>\n//       <nav>\n//         <NavLink to={ROUTES.CONTACTS} activeClassName='active'>\n//           Contacts\n//         </NavLink>\n//         <NavLink to={ROUTES.APPOINTMENTS} activeClassName='active'>\n//           Appointments\n//         </NavLink>\n//       </nav>\n//       <main>\n//         <Switch>\n//           <Route exact path='/'>\n//             <Redirect to={ROUTES.CONTACTS} />\n//           </Route>\n//           <Route path={ROUTES.CONTACTS}>\n//             {/* Add props to ContactsPage */}\n//             <ContactsPage contacts={contacts} addContact={addContact} />\n//           </Route>\n//           <Route path={ROUTES.APPOINTMENTS}>\n//             {/* Add props to AppointmentsPage */}\n//             <AppointmentsPage\n//               contacts={contacts}\n//               appointments={appointments}\n//               addAppointment={addAppoint}\n//             />\n//           </Route>\n//         </Switch>\n//       </main>\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\nimport { AppointmentsPage } from './containers/appointmentsPage/AppointmentsPage';\nimport { ContactsPage } from './containers/contactsPage/ContactsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const ROUTES = {\n    CONTACTS: '/contacts',\n    APPOINTMENTS: '/appointments'\n  };\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  const addContact = (name, phone, email) => {\n    console.log(name, phone, email);\n    setContacts(prevContact => {\n      return [...prevContact, {\n        name,\n        phone,\n        email\n      }];\n    });\n  };\n  const addAppointment = (title, contact, date, time) => {\n    setAppointments(prevAppointment => {\n      return [...prevAppointment, {\n        title,\n        contact,\n        date,\n        time\n      }];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.CONTACTS,\n        activeClassName: \"active\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: ROUTES.APPOINTMENTS,\n        activeClassName: \"active\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: ROUTES.CONTACTS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.CONTACTS,\n          children: /*#__PURE__*/_jsxDEV(ContactsPage, {\n            contacts: contacts,\n            addContact: addContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: ROUTES.APPOINTMENTS,\n          children: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n            contacts: contacts,\n            appointments: appointments,\n            addAppointment: addAppointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Switch","Route","Redirect","NavLink","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","contacts","setContacts","appointments","setAppointments","ROUTES","CONTACTS","APPOINTMENTS","addContact","name","phone","email","console","log","prevContact","addAppointment","title","contact","date","time","prevAppointment","children","to","activeClassName","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","_c","$RefreshReg$"],"sources":["/Users/dievfer/Desktop/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["// import React, {useState} from \"react\";\r\n// import { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\n// import Root, { ROUTES } from \"./components/root/Root\";\r\n// import { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\n// import { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\n// function App() {\r\n//   /*\r\n//   Define state variables for \r\n//   contacts and appointments \r\n//   */\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [appointments, setAppointments] = useState([]);\r\n\r\n//   /*\r\n//   Implement functions to add data to\r\n//   contacts and appointments\r\n//   */\r\n//     const addContact = (name, phoneNumber, email) => {\r\n//     const newContact = {\r\n//       name: name, \r\n//       phoneNumber: phoneNumber,\r\n//       email: email,\r\n//     };\r\n//     setContacts((prevContacts) => [...prevContacts, newContact]);\r\n//   };\r\n//     const addAppoint = (name, phoneNumber, email) => {\r\n//       const newAppoint={\r\n//         name: name, \r\n//         phoneNumber: phoneNumber, \r\n//         email: email,\r\n//       };\r\n//       setAppointments((prevAppointments) => [...prevAppointments, newAppoint]);\r\n//     };\r\n\r\n\r\n//   const router = createBrowserRouter(createRoutesFromElements(\r\n//     <Route path=\"/\" element={ <Root/> }>\r\n//       <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n//       <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\r\n//       <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\r\n//     </Route>\r\n//   ));\r\n  \r\n//   return (\r\n//     <>\r\n//       <nav>\r\n//         <NavLink to={ROUTES.CONTACTS} activeClassName='active'>\r\n//           Contacts\r\n//         </NavLink>\r\n//         <NavLink to={ROUTES.APPOINTMENTS} activeClassName='active'>\r\n//           Appointments\r\n//         </NavLink>\r\n//       </nav>\r\n//       <main>\r\n//         <Switch>\r\n//           <Route exact path='/'>\r\n//             <Redirect to={ROUTES.CONTACTS} />\r\n//           </Route>\r\n//           <Route path={ROUTES.CONTACTS}>\r\n//             {/* Add props to ContactsPage */}\r\n//             <ContactsPage contacts={contacts} addContact={addContact} />\r\n//           </Route>\r\n//           <Route path={ROUTES.APPOINTMENTS}>\r\n//             {/* Add props to AppointmentsPage */}\r\n//             <AppointmentsPage\r\n//               contacts={contacts}\r\n//               appointments={appointments}\r\n//               addAppointment={addAppoint}\r\n//             />\r\n//           </Route>\r\n//         </Switch>\r\n//       </main>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, NavLink } from 'react-router-dom';\r\n\r\nimport { AppointmentsPage } from './containers/appointmentsPage/AppointmentsPage';\r\nimport { ContactsPage } from './containers/contactsPage/ContactsPage';\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: '/contacts',\r\n    APPOINTMENTS: '/appointments',\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const addContact = (name, phone, email) => {\r\n    console.log(name, phone, email);\r\n    setContacts((prevContact) => {\r\n      return [...prevContact, { name, phone, email }];\r\n    });\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments((prevAppointment) => {\r\n      return [...prevAppointment, { title, contact, date, time }];\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName='active'>\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName='active'>\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage\r\n              contacts={contacts}\r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}